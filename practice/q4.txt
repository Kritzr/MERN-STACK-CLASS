Here's a complete solution for a **Doctor Appointment Booking System UI** using **React** with **Bootstrap**. The interface includes doctor profiles, an appointment booking form, and all the required features like pre-filling data for doctor selection.

### ðŸ”§ Project Setup

1. **Install Bootstrap**:
   ```bash
   npm install bootstrap
   ```

2. **Import Bootstrap Styles**:
   In `index.js` or `App.js`, add:
   ```jsx
   import 'bootstrap/dist/css/bootstrap.min.css';
   ```

### ðŸ”‘ **File Structure (suggested)**

```
src/
â”‚
â”œâ”€â”€ components/
â”‚   â”œâ”€â”€ Navbar.js
â”‚   â”œâ”€â”€ Hero.js
â”‚   â”œâ”€â”€ AboutUs.js
â”‚   â”œâ”€â”€ DoctorsListing.js
â”‚   â”œâ”€â”€ AppointmentForm.js
â”‚   â””â”€â”€ Footer.js
â”‚
â”œâ”€â”€ App.js
â””â”€â”€ index.js
```

### ðŸ“‘ **App.js (Core Logic)**

```jsx
import React, { useState, useEffect } from 'react';
import 'bootstrap/dist/css/bootstrap.min.css';
import Navbar from './components/Navbar';
import Hero from './components/Hero';
import AboutUs from './components/AboutUs';
import DoctorsListing from './components/DoctorsListing';
import AppointmentForm from './components/AppointmentForm';
import Footer from './components/Footer';

function App() {
  const [selectedDoctor, setSelectedDoctor] = useState({ name: '', specialization: '' });
  const [doctors, setDoctors] = useState([]);
  
  // Fetch doctors data (simulated with useEffect)
  useEffect(() => {
    const doctorsData = [
      { name: 'Dr. John Doe', specialization: 'Cardiologist', experience: '10 years' },
      { name: 'Dr. Jane Smith', specialization: 'Dentist', experience: '5 years' },
      { name: 'Dr. Michael Brown', specialization: 'Pediatrician', experience: '8 years' },
    ];
    setDoctors(doctorsData);
  }, []);

  const handleBookNow = (doctorName, specialization) => {
    setSelectedDoctor({ name: doctorName, specialization });
  };

  return (
    <div>
      <Navbar />
      <Hero />
      <AboutUs />
      <DoctorsListing doctors={doctors} onBookNow={handleBookNow} />
      <AppointmentForm doctor={selectedDoctor} />
      <Footer />
    </div>
  );
}

export default App;
```

---

### ðŸ“‹ **Components**

#### 1. **Navbar.js**

```jsx
import React from 'react';
import { Navbar, Nav, Container } from 'react-bootstrap';

const NavbarComponent = () => {
  return (
    <Navbar bg="dark" variant="dark" expand="lg">
      <Container>
        <Navbar.Brand href="#">Healthcare Portal</Navbar.Brand>
        <Nav className="ms-auto">
          <Nav.Link href="#home">Home</Nav.Link>
          <Nav.Link href="#about">About Us</Nav.Link>
          <Nav.Link href="#doctors">Doctors</Nav.Link>
          <Nav.Link href="#contact">Contact</Nav.Link>
        </Nav>
      </Container>
    </Navbar>
  );
};

export default NavbarComponent;
```

---

#### 2. **Hero.js**

```jsx
const Hero = () => (
  <div className="hero-section" style={{ backgroundImage: 'url("https://via.placeholder.com/1200x400")', height: '400px', backgroundSize: 'cover', textAlign: 'center', color: 'white' }}>
    <h1 className="display-4 pt-5">Book Your Appointment Today</h1>
    <p className="lead">Get professional healthcare with the best doctors in the field.</p>
  </div>
);

export default Hero;
```

---

#### 3. **AboutUs.js**

```jsx
const AboutUs = () => (
  <div id="about" className="my-5 text-center">
    <h2>About Us</h2>
    <div className="d-flex justify-content-center my-4">
      <img src="https://via.placeholder.com/400x300" alt="Clinic" className="img-fluid rounded" />
    </div>
    <p>We are a healthcare clinic offering a wide range of professional medical services. Our team of experienced doctors is here to provide quality healthcare for you and your family.</p>
  </div>
);

export default AboutUs;
```

---

#### 4. **DoctorsListing.js**

```jsx
import React from 'react';
import { Card, Button, Row, Col, Container } from 'react-bootstrap';

const DoctorsListing = ({ doctors, onBookNow }) => {
  return (
    <Container id="doctors" className="my-5">
      <h2>Our Doctors</h2>
      <Row>
        {doctors.map((doctor, index) => (
          <Col md={4} key={index} className="mb-4">
            <Card>
              <Card.Body>
                <Card.Title>{doctor.name}</Card.Title>
                <Card.Subtitle className="mb-2 text-muted">{doctor.specialization}</Card.Subtitle>
                <Card.Text>Experience: {doctor.experience}</Card.Text>
                <Button variant="primary" onClick={() => onBookNow(doctor.name, doctor.specialization)}>
                  Book Now
                </Button>
              </Card.Body>
            </Card>
          </Col>
        ))}
      </Row>
    </Container>
  );
};

export default DoctorsListing;
```

---

#### 5. **AppointmentForm.js**

```jsx
import React, { useState, useEffect } from 'react';
import { Container, Form, Button } from 'react-bootstrap';

const AppointmentForm = ({ doctor }) => {
  const [formData, setFormData] = useState({
    firstName: '',
    lastName: '',
    phoneNumber: '',
    email: '',
    doctorName: doctor.name,
    specialization: doctor.specialization,
    date: '',
    time: '',
  });

  // Update form when doctor changes
  useEffect(() => {
    setFormData(prev => ({
      ...prev,
      doctorName: doctor.name,
      specialization: doctor.specialization,
    }));
  }, [doctor]);

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData(prev => ({ ...prev, [name]: value }));
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    alert('Appointment booked successfully!');
    localStorage.setItem('appointment', JSON.stringify(formData)); // Store form data in localStorage
  };

  return (
    <Container id="appointment-form" className="my-5">
      <h2>Book an Appointment</h2>
      <Form onSubmit={handleSubmit}>
        <Form.Group className="mb-3">
          <Form.Label>First Name</Form.Label>
          <Form.Control type="text" name="firstName" value={formData.firstName} onChange={handleChange} required />
        </Form.Group>

        <Form.Group className="mb-3">
          <Form.Label>Last Name</Form.Label>
          <Form.Control type="text" name="lastName" value={formData.lastName} onChange={handleChange} required />
        </Form.Group>

        <Form.Group className="mb-3">
          <Form.Label>Phone Number</Form.Label>
          <Form.Control type="tel" name="phoneNumber" value={formData.phoneNumber} onChange={handleChange} required />
        </Form.Group>

        <Form.Group className="mb-3">
          <Form.Label>Email</Form.Label>
          <Form.Control type="email" name="email" value={formData.email} onChange={handleChange} required />
        </Form.Group>

        <Form.Group className="mb-3">
          <Form.Label>Doctor Name</Form.Label>
          <Form.Control type="text" name="doctorName" value={formData.doctorName} readOnly />
        </Form.Group>

        <Form.Group className="mb-3">
          <Form.Label>Specialization</Form.Label>
          <Form.Control type="text" name="specialization" value={formData.specialization} readOnly />
        </Form.Group>

        <Form.Group className="mb-3">
          <Form.Label>Date</Form.Label>
          <Form.Control type="date" name="date" value={formData.date} onChange={handleChange} required />
        </Form.Group>

        <Form.Group className="mb-3">
          <Form.Label>Time</Form.Label>
          <Form.Control type="time" name="time" value={formData.time} onChange={handleChange} required />
        </Form.Group>

        <Button variant="primary" type="submit">Book Appointment</Button>
      </Form>
    </Container>
  );
};

export default AppointmentForm;
```

---

#### 6. **Footer.js**

```jsx
const Footer = () => (
  <footer className="bg-dark text-white text-center py-4">
    <p>Contact us: 123-456-7890 | Email: healthcare@clinic.com</p>
    <div>
      <a href="#" className="text-white me-3">Facebook</a>
      <a href="#" className="text-white me-3">Twitter</a>
      <a href="#" className="text-white">LinkedIn</a>
    </div>
  </footer>
);

export default Footer;
```

---

### ðŸš€ **Testing the App**

1. Run the app with:
   ```bash
   npm

 start
   ```

2. **Interact with the system**:
   - Click the "Book Now" button on a doctor card to pre-fill the appointment form.
   - Submit the form, and the data will be stored in `localStorage`.

### ðŸš€ **Improvements**
- **Form validation**: You could add form validation with libraries like `Formik` and `Yup`.
- **Backend Integration**: This solution currently uses `localStorage`. In a real-world app, you'd integrate it with a backend API for appointment booking.
