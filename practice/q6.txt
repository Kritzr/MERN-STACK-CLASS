Footer with links: Support, FAQs, Terms & Conditions
ChatGPT said:
Here's a basic structure for your Product Ordering UI using React (with functional components and hooks like useState). This setup includes:

Navigation bar

Hero section

Product listing

Cart and order summary

Order form with confirmation

ðŸ”§ Project File Structure (suggested)
css
Copy
Edit
src/
â”‚
â”œâ”€â”€ components/
â”‚   â”œâ”€â”€ Navbar.js
â”‚   â”œâ”€â”€ Hero.js
â”‚   â”œâ”€â”€ ProductCard.js
â”‚   â”œâ”€â”€ ProductList.js
â”‚   â”œâ”€â”€ Cart.js
â”‚   â”œâ”€â”€ OrderSummary.js
â”‚   â”œâ”€â”€ OrderForm.js
â”‚   â””â”€â”€ Footer.js
â”‚
â”œâ”€â”€ App.js
â””â”€â”€ index.js
ðŸ§± Core Components
1. Navbar.js
jsx
Copy
Edit
import React from 'react';

const Navbar = () => (
  <nav>
    <ul>
      <li>Home</li>
      <li>Products</li>
      <li>Cart</li>
      <li>Contact</li>
      <li>Login / Signup</li>
    </ul>
  </nav>
);

export default Navbar;
2. Hero.js
jsx
Copy
Edit
const Hero = () => (
  <section className="hero">
    <h1>Welcome to TechGizmo!</h1>
    <p>Discover the latest gadgets at unbeatable prices.</p>
  </section>
);

export default Hero;
3. ProductCard.js
jsx
Copy
Edit
const ProductCard = ({ product, addToCart }) => (
  <div className="product-card">
    <img src={product.image} alt={product.name} />
    <h3>{product.name}</h3>
    <p>${product.price}</p>
    <button onClick={() => addToCart(product)}>Add to Cart</button>
  </div>
);

export default ProductCard;
4. ProductList.js
jsx
Copy
Edit
import React from 'react';
import ProductCard from './ProductCard';

const ProductList = ({ products, addToCart }) => (
  <div className="product-list">
    {products.map(product => (
      <ProductCard key={product.id} product={product} addToCart={addToCart} />
    ))}
  </div>
);

export default ProductList;
5. Cart.js
jsx
Copy
Edit
const Cart = ({ cartItems }) => (
  <div>
    <h2>Cart</h2>
    {cartItems.map((item, index) => (
      <div key={index}>
        {item.name} x {item.quantity} â€” ${item.quantity * item.price}
      </div>
    ))}
    <button>Checkout</button>
  </div>
);

export default Cart;
6. OrderSummary.js
jsx
Copy
Edit
const OrderSummary = ({ user, cartItems, total }) => (
  <div>
    <h2>Order Summary</h2>
    <p>{user.firstName} {user.lastName} - {user.email}</p>
    {cartItems.map((item, i) => (
      <div key={i}>
        {item.name} x {item.quantity} - ${item.quantity * item.price}
      </div>
    ))}
    <h3>Total: ${total}</h3>
  </div>
);

export default OrderSummary;
7. OrderForm.js
jsx
Copy
Edit
import React, { useState } from 'react';

const OrderForm = ({ onOrderPlaced }) => {
  const [form, setForm] = useState({
    firstName: '',
    lastName: '',
    email: '',
    address: ''
  });

  const handleChange = e => {
    const { name, value } = e.target;
    setForm(prev => ({ ...prev, [name]: value }));
  };

  const handleSubmit = e => {
    e.preventDefault();
    onOrderPlaced(form);
    alert('Order placed successfully!');
  };

  return (
    <form onSubmit={handleSubmit}>
      <input name="firstName" placeholder="First Name" onChange={handleChange} required />
      <input name="lastName" placeholder="Last Name" onChange={handleChange} required />
      <input type="email" name="email" placeholder="Email" onChange={handleChange} required />
      <textarea name="address" placeholder="Shipping Address" onChange={handleChange} required />
      <button type="submit">Place Order</button>
    </form>
  );
};

export default OrderForm;
8. Footer.js
jsx
Copy
Edit
const Footer = () => (
  <footer>
    <ul>
      <li>Support</li>
      <li>FAQs</li>
      <li>Terms & Conditions</li>
    </ul>
  </footer>
);

export default Footer;
ðŸ§  App.js (Putting it all together)
jsx
Copy
Edit
import React, { useState } from 'react';
import Navbar from './components/Navbar';
import Hero from './components/Hero';
import ProductList from './components/ProductList';
import Cart from './components/Cart';
import OrderSummary from './components/OrderSummary';
import OrderForm from './components/OrderForm';
import Footer from './components/Footer';

const sampleProducts = [
  { id: 1, name: 'Smart Watch', price: 199, image: '/images/watch.jpg' },
  { id: 2, name: 'Bluetooth Speaker', price: 99, image: '/images/speaker.jpg' },
];

const App = () => {
  const [cart, setCart] = useState([]);
  const [user, setUser] = useState(null);

  const addToCart = (product) => {
    setCart(prev => {
      const existing = prev.find(item => item.id === product.id);
      if (existing) {
        return prev.map(item =>
          item.id === product.id ? { ...item, quantity: item.quantity + 1 } : item
        );
      } else {
        return [...prev, { ...product, quantity: 1 }];
      }
    });
  };

  const handleOrderPlaced = (userInfo) => {
    setUser(userInfo);
    setCart([]);
  };

  const total = cart.reduce((sum, item) => sum + item.quantity * item.price, 0);

  return (
    <div>
      <Navbar />
      <Hero />
      <ProductList products={sampleProducts} addToCart={addToCart} />
      <Cart cartItems={cart} />
      {cart.length > 0 && (
        <>
          <OrderSummary user={user || { firstName: '', lastName: '', email: '' }} cartItems={cart} total={total} />
          <OrderForm onOrderPlaced={handleOrderPlaced} />
        </>
      )}
      <Footer />
    </div>
  );
};

export default App;
ðŸš€ Tips to Enhance
Use React Router for navigation between pages (e.g., /products, /cart, /checkout)

Add validations and toasts using react-toastify

Store cart in localStorage to persist items

__________________________________
To provide you with the full code using **Bootstrap**, Iâ€™ll walk you through a React project setup where all UI components are styled with Bootstrap classes. Hereâ€™s a complete codebase you can use in a single-page React app:

---

### âœ… Step 1: **Install Bootstrap**
```bash
npm install bootstrap
```

In `index.js` or `App.js`, import Bootstrap styles:
```jsx
import 'bootstrap/dist/css/bootstrap.min.css';
```

---

### âœ… Step 2: **App.js**
```jsx
import React, { useState } from 'react';
import 'bootstrap/dist/css/bootstrap.min.css';
import { Container, Navbar, Nav, Card, Button, Row, Col, Form, Toast } from 'react-bootstrap';

const sampleProducts = [
  { id: 1, name: 'Smart Watch', price: 199, image: 'https://via.placeholder.com/150' },
  { id: 2, name: 'Bluetooth Speaker', price: 99, image: 'https://via.placeholder.com/150' },
];

function App() {
  const [cart, setCart] = useState([]);
  const [formData, setFormData] = useState({ firstName: '', lastName: '', email: '', address: '' });
  const [showToast, setShowToast] = useState(false);

  const addToCart = (product) => {
    setCart(prev => {
      const found = prev.find(p => p.id === product.id);
      if (found) {
        return prev.map(p => p.id === product.id ? { ...p, quantity: p.quantity + 1 } : p);
      }
      return [...prev, { ...product, quantity: 1 }];
    });
  };

  const handleFormChange = (e) => {
    const { name, value } = e.target;
    setFormData(prev => ({ ...prev, [name]: value }));
  };

  const handleOrder = (e) => {
    e.preventDefault();
    setCart([]);
    setFormData({ firstName: '', lastName: '', email: '', address: '' });
    setShowToast(true);
  };

  const total = cart.reduce((acc, item) => acc + item.price * item.quantity, 0);

  return (
    <div>
      {/* Navbar */}
      <Navbar bg="dark" variant="dark" expand="lg">
        <Container>
          <Navbar.Brand href="#">Tech Store</Navbar.Brand>
          <Nav className="ms-auto">
            <Nav.Link href="#">Home</Nav.Link>
            <Nav.Link href="#">Products</Nav.Link>
            <Nav.Link href="#">Cart</Nav.Link>
            <Nav.Link href="#">Contact</Nav.Link>
            <Nav.Link href="#">Login / Signup</Nav.Link>
          </Nav>
        </Container>
      </Navbar>

      {/* Hero */}
      <div className="bg-primary text-white text-center py-5">
        <h1>Discover the Latest Tech</h1>
        <p>Find amazing gadgets at great prices</p>
      </div>

      {/* Product List */}
      <Container className="my-4">
        <Row>
          {sampleProducts.map(product => (
            <Col md={4} key={product.id} className="mb-4">
              <Card>
                <Card.Img variant="top" src={product.image} />
                <Card.Body>
                  <Card.Title>{product.name}</Card.Title>
                  <Card.Text>${product.price}</Card.Text>
                  <Button onClick={() => addToCart(product)}>Add to Cart</Button>
                </Card.Body>
              </Card>
            </Col>
          ))}
        </Row>
      </Container>

      {/* Cart */}
      <Container>
        <h3>Cart</h3>
        {cart.length === 0 ? <p>No items in cart</p> : (
          <ul className="list-group mb-4">
            {cart.map((item, index) => (
              <li key={index} className="list-group-item d-flex justify-content-between align-items-center">
                {item.name} x {item.quantity}
                <span>${item.quantity * item.price}</span>
              </li>
            ))}
            <li className="list-group-item d-flex justify-content-between">
              <strong>Total</strong>
              <strong>${total}</strong>
            </li>
          </ul>
        )}
      </Container>

      {/* Order Form */}
      {cart.length > 0 && (
        <Container>
          <h3>Place Your Order</h3>
          <Form onSubmit={handleOrder}>
            <Row>
              <Col md={6}>
                <Form.Group className="mb-3">
                  <Form.Label>First Name</Form.Label>
                  <Form.Control name="firstName" value={formData.firstName} onChange={handleFormChange} required />
                </Form.Group>
              </Col>
              <Col md={6}>
                <Form.Group className="mb-3">
                  <Form.Label>Last Name</Form.Label>
                  <Form.Control name="lastName" value={formData.lastName} onChange={handleFormChange} required />
                </Form.Group>
              </Col>
            </Row>
            <Form.Group className="mb-3">
              <Form.Label>Email</Form.Label>
              <Form.Control type="email" name="email" value={formData.email} onChange={handleFormChange} required />
            </Form.Group>
            <Form.Group className="mb-3">
              <Form.Label>Shipping Address</Form.Label>
              <Form.Control as="textarea" rows={2} name="address" value={formData.address} onChange={handleFormChange} required />
            </Form.Group>
            <Button type="submit" variant="success">Place Order</Button>
          </Form>
        </Container>
      )}

      {/* Toast Notification */}
      <Toast
        className="position-fixed bottom-0 end-0 m-4"
        onClose={() => setShowToast(false)}
        show={showToast}
        delay={3000}
        autohide
        bg="success"
      >
        <Toast.Header>
          <strong className="me-auto">Order Placed</strong>
        </Toast.Header>
        <Toast.Body className="text-white">Thank you for your purchase!</Toast.Body>
      </Toast>

      {/* Footer */}
      <footer className="bg-dark text-white text-center py-3 mt-4">
        <Container>
          <p>Support | FAQs | Terms & Conditions</p>
        </Container>
      </footer>
    </div>
  );
}

export default App;
```

---

### ðŸ§ª Test It Out
1. Create a new React app:  
   `npx create-react-app tech-store`
2. Replace contents of `src/App.js` with the code above.
3. Add Bootstrap via `npm install bootstrap` and import in `index.js`.

---

Let me know if you want:
- A version with **React Router**
- To split this into modular component files
- A version using **TypeScript**
- Or deployed to GitHub/Netlify

Want me to zip up the files or generate the folder structure for download?